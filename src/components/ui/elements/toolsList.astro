---
import Pill from "./pill.astro";
interface Props {
  tools: string[];
}

const { tools } = Astro.props as Props;

// Cargar dinámicamente los componentes de íconos
const icons = tools.length > 0
  ? await Promise.all(
      tools.map(async (tool) => {
        try {
          const Icon = await import(`../icons/${tool}.astro`);
          return { tool, Icon: Icon.default };
        } catch (e) {
          console.error(`No se pudo cargar el ícono para ${tool}:`, e);
          return { tool, Icon: null };
        }
      })
    )
  : [];
---
<ul class="flex flex-wrap items-center justify-center gap-4">
  {icons.length > 0 ? (
    icons.map(({ tool, Icon }) =>
      Icon ? (
        <Pill lang={tool.charAt(0).toUpperCase() + tool.slice(1).toLowerCase()}>
          <Icon />
        </Pill>
      ) : (
        <Pill>
          <span class="font-medium text-red-600 dark:text-red-500">
            No se ha encontrado icono para '{tool}'
          </span>
        </Pill>
      )
    )
  ) : (
    <li class="font-medium text-neutral-500 dark:text-neutral-400">
      No se han especificado herramientas para este proyecto.
    </li>
  )}
</ul>